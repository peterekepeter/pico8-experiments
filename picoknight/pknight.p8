pico-8 cartridge // http://www.pico-8.com
version 18
__lua__

function _init()
 init_hero();
 init_monster();
end

function init_hero()
	hero = {
	 hp= 100,
	 hpmax = 100,
	 attack = 30,
	 attack_rt = 90,
	 attack_cd = 0,
	 x = -16,
	 hx= -16,
	 hhx=-16,
	 hy= 64,
	 y = 64,
	 w = 8,
	 h = 8,
	}
end

function init_monster()
 monster = {
 	hp=100,
 	hpmax = 100,
 	attack = 10,
	 attack_rt = 150,
 	attack_cd = 10,
 	x=150,
 	y=64,
 	w=12,
 	h=8
 }
end

-->8


function _update60()
	update_hero();
	update_monster();
end

function update_hero()
	if (attack(hero, monster)) then
		
	else
		move_to(hero, {x=32,y=96});
	end
	hero.hx=lazy(hero.x,hero.hx,3,1);
	hero.hy=lazy(hero.y,hero.hy,1,1);
	hero.hhx=lazy(hero.hx,hero.hhx,4,1);
end

function lazy(a,b,s,l)
	return mid(a-l,(a+b*s)/(s+1),a+l);
end

function update_monster()
 if (attack(monster, hero)) then
 
 else
		move_to(monster, {x=80,y=96});
 end
	
end

function attack(a,b)
	if (a.hp<=0 or b.hp<=0) return false;
	local dist = distance(a,b);
	if (dist > 80) then
		return false
	elseif (a.attack_cd>0) then
		a.attack_cd -= 1;
	elseif (dist>0) then
		move_to(a,b);
	else 
		b.hp -= a.attack;
		a.attack_cd = a.attack_rt;
		local s=4;
		if (a.x<b.x) then
			b.x+=s;
		else
		 b.x-=s;
		end
	end
	return true;
end

function distance(a,b)
	if (a.x>b.x) then
		return (a.x-a.w)-(b.x+b.w);
	else
		return (b.x-b.w)-(a.x+a.w);
	end
end

function move_to(a, b)
	local ax,ay,aw,ah,bx,by,bw,bh
	 = a.x, a.y, nz(a.w), nz(a.h),
	   b.x, b.y, nz(b.w), nz(b.h);
	if (ax+aw < bx-bw) a.x+=1;
	if (ay+ah < by-bh) a.y+=1;
	if (ax-aw > bx+bw) a.x-=1;
	if (ay-ah > by+bh) a.y-=1;
end
-->8

function _draw()
	rectfill(0,0,128,128,3);
	draw_hero();
	draw_monster();
	color(7);
	print(distance(hero,monster),0,0)
end

function draw_hero()
 local h=hero;
 local x,y=h.x,h.y;
	if(hero.hp<=0) return;
	palt(0,false);
	palt(3,true);
	--spr(32,hero.x-hero.w, hero.y-hero.h,2,2);
 spr(23,x,h.hy-7.5);
 spr(16,x-3,y-6);
 spr(19,h.hhx-7.5,h.hy-0.5);
 spr(20,h.hx-7.5,h.hy-2.5);
 spr(21,x-7,y-8);
 spr(22,x,y-8);
 spr(21,x-7,y-8);
 --draw_box(hero, 14);
 draw_hp_bar(hero);
end

function draw_monster()
	if(monster.hp<=0) return;
	draw_box(monster, 5);
 draw_hp_bar(monster);
end

function draw_box(obj, c)
	local h,w = obj.h, obj.w
	local x,y = obj.x, obj.y
	rect(x-w,y-h,x+w,y+h,c);
end

function draw_hp_bar(obj)
	local s=16;
	local x=obj.x-s/2;
	local y=obj.y-4-obj.h;
	local w=obj.hp*s/obj.hpmax;
	rect(x-1,y-1,x+s+1,y+2,0);
	if (w>0)	rect(x,y,x+w,y+1,8+w/s*3);
end
-->8

-- treat nil as zero
function nz(v) 
 if (v==nil) return 0;
 return v;
end

-- make xy vector
function xy(x,y) 
	return {x=x,y=y}
end
__gfx__
000000000000105411111111001d1100000880000144441000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000014951666ddd1001d0100002821001444442100111100000000000000000000000000000000000000000000000000000000000000000000000000
007007000001d6401666ddd1001d0100002821001144421101777710000000000000000000000000000000000000000000000000000000000000000000000000
00077000001d67111666ddd101d00010002821001417c12101799410000000000000000000000000000000000000000000000000000000000000000000000000
0007700001d671001555111119a99991002821001416512101799410000000000000000000000000000000000000000000000000000000000000000000000000
007007001d6710000155111019a99941000210001441142101444410000000000000000000000000000000000000000000000000000000000000000000000000
000000001671000000151100019a4410002821001444442100111100000000000000000000000000000000000000000000000000000000000000000000000000
00000000111000000001100000111100000110000122221000000000000000000000000000000000000000000000000000000000000000000000000000000000
33000333330003333300033333333333333333333330000000333333110333330000000000000000000000000000000000000000000000000000000000000000
30fff03330fff03330fff03333111133301d1dd13301dddddd033333111033330000000000000000000000000000000000000000000000000000000000000000
0ff77f030fffff030fffff0330111113301d1dd1301dddddd1133333111033330000000000000000000000000000000000000000000000000000000000000000
0ff70f030ff70f030ff00f0330101113301d1dd1301d7dd113333333111033330000000000000000000000000000000000000000000000000000000000000000
0fffff030fffff030fffff033000033330111d1101d7d7d333333333111033330000000000000000000000000000000000000000000000000000000000000000
30fff03330fff03330fff033333333333333313301dddd1333333333111033330000000000000000000000000000000000000000000000000000000000000000
33000333330003333300033333333333333333333333333333333333110333330000000000000000000000000000000000000000000000000000000000000000
33333333333333333333333333333333333333333333333333333333103333330000000000000000000000000000000000000000000000000000000000000000
33330000003333333333333333333333333300000033333300000000000000000000000000000000000000000000000000000000000000000000000000000000
33301ddddd033333333333333333333333301ddddd03333300000000000000000000000000000000000000000000000000000000000000000000000000000000
3301ddddd110333333333333333333333301ddddd110333300000000000000000000000000000000000000000000000000000000000000000000000000000000
3301d7dd1f10333333333333333333333301d7dd1310333300000000000000000000000000000000000000000000000000000000000000000000000000000000
301d7d7dfff033333333333333333333301d7d7d3330333300000000000000000000000000000000000000000000000000000000000000000000000000000000
301dddd100f033333330003333300033301dddd13333333300000000000000000000000000000000000000000000000000000000000000000000000000000000
301d1dd1fff03333330fff03330fff03301d1dd13333333300000000000000000000000000000000000000000000000000000000000000000000000000000000
301d1dd1ff03333330ff77f030fffff0301d1dd13333333300000000000000000000000000000000000000000000000000000000000000000000000000000000
301d1dd1f033333330ff70f030ff70f0301d1dd13333333300000000000000000000000000000000000000000000000000000000000000000000000000000000
301111110000003330fffff030fffff0301111113333333300000000000000000000000000000000000000000000000000000000000000000000000000000000
301015505505ff0330fffff030fffff0301013333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000
300005101501ff03330fff03330fff03300003333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000
33330ff0510000333330003333300033333333333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000
33330ff0150333333333333333333333333333333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000
33330000150333333333333333333333333333333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000
33330150150333333333333333333333333333333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
00010000080501f6501f6502d050080500805009050290501c1501b1501a150181501715015150141501315011150111500f1500f1500e1500f1500f1500d1500c1500b1500a1500915008150061500515004150
